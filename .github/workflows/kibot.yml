# SPDX-FileCopyrightText: 2022 nerdyscout <https://github.com/nerdyscout/>
#
# SPDX-License-Identifier: CC0-1.0

name: KiBot

on:
  push:
    paths:
    - "Kicad/*.kicad_sch"
    - "Kicad/*.kicad_pcb"
    - "Kicad/*.kicad_pro"
    - "**/*kibot.yml"
  pull_request:
    paths:
    - "Kicad/*.kicad_sch"
    - "Kicad/*.kicad_pcb"
    - "Kicad/*.kicad_pro"
    - "**/*kibot.yml"

env:
  schema: "Kicad/neotron-pico.kicad_sch"
  board: "Kicad/neotron-pico.kicad_pcb"
  dir: .

jobs:
  DRC:
    runs-on: ubuntu-latest
    container:
      image: setsoft/kicad_auto:dev_k6
    steps:
      - uses: actions/checkout@v2
      - name: Run KiBot for DRC
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_drc -v -i
  ERC:
    runs-on: ubuntu-latest
    container:
      image: setsoft/kicad_auto:dev_k6
    steps:
      - uses: actions/checkout@v2
      - name: Run KiBot for ERC
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc -v -i
  build:
    runs-on: ubuntu-latest
    needs: [ERC, DRC]
    container:
      image: setsoft/kicad_auto:dev_k6
    steps:
      - uses: actions/checkout@v2
      - name: Get Branch Name
        if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Run KiBot for Schematic Docs
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc,run_drc -v \
            ibom.html octopart.csv schematic.pdf
      - name: Upload Schematic Docs
        uses: actions/upload-artifact@v2
        if: ${{success()}}
        with:
          name: Neotron-Pico-Schematic-Docs
          if-no-files-found: error
          path: |
            ${{env.dir}}/docs/**
            !${{env.dir}}/**/*.ogv
            !${{env.dir}}/**/*.log
      - name: Run KiBot to generate Gerbers
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc,run_drc -v \
            gerbers.gbr drills.gbr drills.drl pickandplace.csv bom.csv gerbers_jlcpcb.gbr JLCPCB_drill JLCPCB_bom JLCPCB_cpl
      - name: Upload Gerbers
        uses: actions/upload-artifact@v2
        if: ${{success()}}
        with:
          name: Neotron-Pico-Gerbers
          if-no-files-found: error
          path: |
            ${{env.dir}}/gerbers/**
            !${{env.dir}}/**/*.ogv
            !${{env.dir}}/**/*.log
      - name: Run KiBot to generate PCB CAD
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc,run_drc -v \
            board_green_top.png board_green_bottom.png
      - name: Upload PCB CAD
        uses: actions/upload-artifact@v2
        if: ${{success()}}
        with:
          name: Neotron-Pico-PCB
          if-no-files-found: error
          path: |
            ${{env.dir}}/img/**
            !${{env.dir}}/**/*.ogv
            !${{env.dir}}/**/*.log
      - name: Assemble Release
        if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        run: |
          cd ${{env.dir}}
          tar cvzf Neotron-Pico-JLCPCB-${{ steps.branch_name.outputs.SOURCE_TAG }}.tar.gz gerbers/jlcpcb/*
          rm -rf gerbers/jlcpcb
          tar cvzf Neotron-Pico-Gerbers-${{ steps.branch_name.outputs.SOURCE_TAG }}.tar.gz gerbers/*
          mv docs/neotron-pico-schematic.pdf Neotron-Pico-Schematic-${{ steps.branch_name.outputs.SOURCE_TAG }}.pdf
          mv docs/bom/neotron-pico-ibom.html Neotron-Pico-iBOM-${{ steps.branch_name.outputs.SOURCE_TAG }}.html
          mv docs/bom/neotron-pico-bom.csv Neotron-Pico-BOM-${{ steps.branch_name.outputs.SOURCE_TAG }}.csv
          mv img/pcb/neotron-pico-bottom.png Neotron-Pico-PCB-Bottom-${{ steps.branch_name.outputs.SOURCE_TAG }}.png
          mv img/pcb/neotron-pico-top.png Neotron-Pico-PCB-Top-${{ steps.branch_name.outputs.SOURCE_TAG }}.png
      - name: Create and Upload Release
        if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.branch_name.outputs.SOURCE_TAG }}
          draft: false
          prerelease: false
          files: |
            ${{env.dir}}/Neotron-Pico-*
