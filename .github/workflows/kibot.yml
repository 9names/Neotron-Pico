# SPDX-FileCopyrightText: 2022 nerdyscout <https://github.com/nerdyscout/>
#
# SPDX-License-Identifier: CC0-1.0

name: KiBot

on:
  push:
    paths:
    - "Kicad/*.kicad_sch"
    - "Kicad/*.kicad_pcb"
    - "Kicad/*.kicad_pro"
    - "**/*kibot.yml"
  pull_request:
    paths:
    - "Kicad/*.kicad_sch"
    - "Kicad/*.kicad_pcb"
    - "Kicad/*.kicad_pro"
    - "**/*kibot.yml"

env:
  schema: "Kicad/neotron-pico.kicad_sch"
  board: "Kicad/neotron-pico.kicad_pcb"
  dir: .

jobs:
  DRC:
    runs-on: ubuntu-latest
    container:
      image: setsoft/kicad_auto:dev_k6
    steps:
      - uses: actions/checkout@v2
      - name: Run KiBot for DRC
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_drc -v -i
  ERC:
    runs-on: ubuntu-latest
    container:
      image: setsoft/kicad_auto:dev_k6
    steps:
      - uses: actions/checkout@v2
      - name: Run KiBot for ERC
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc -v -i
  build:
    runs-on: ubuntu-latest
    needs: [ERC, DRC]
    container:
      image: setsoft/kicad_auto:dev_k6
    steps:
      - uses: actions/checkout@v2
      - name: Get Branch Name
        if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Set version number (for release)
        if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
        run: |
          sed -i "s~\[Uncontrolled\]~${SOURCE_TAG}~g" ${{env.dir}}/Kicad/*.kicad_sch ${{env.dir}}/Kicad/*.kicad_pcb
      - name: Set git hash (for test build)
        if: github.event_name != 'push' || !startswith(github.ref, 'refs/tags/')
        env:
          VERSION: ${{ github.run_id }}
        run: |
          sed -i "s~\[Uncontrolled\]~${VERSION}~g" ${{env.dir}}/Kicad/*.kicad_sch ${{env.dir}}/Kicad/*.kicad_pcb
      - name: Run KiBot for Schematic Docs
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc,run_drc -v \
            ibom.html octopart.csv schematic.pdf
      - name: Upload Schematic Docs
        uses: actions/upload-artifact@v2
        if: ${{success()}}
        with:
          name: ${{github.event.repository.name}}_docs
          if-no-files-found: error
          path: |
            ${{env.dir}}/docs/**
            !${{env.dir}}/**/*.ogv
            !${{env.dir}}/**/*.log
      - name: Run KiBot to generate Gerbers
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc,run_drc -v \
            gerbers.gbr drills.gbr drills.drl pickandplace.csv bom.csv
      - name: Upload Gerbers
        uses: actions/upload-artifact@v2
        if: ${{success()}}
        with:
          name: ${{github.event.repository.name}}-Gerbers
          if-no-files-found: error
          path: |
            ${{env.dir}}/gerbers/**
            !${{env.dir}}/**/*.ogv
            !${{env.dir}}/**/*.log
      - name: Run KiBot to generate PCB CAD
        run: |
          kibot -c kibot.yml -e ${{env.schema}} -b ${{env.board}} -d ${{env.dir}} -s run_erc,run_drc -v \
            model.step openboardview.brd autocad.dxf board_black_top.svg board_black_bottom.svg
      - name: Upload PCB CAD
        uses: actions/upload-artifact@v2
        if: ${{success()}}
        with:
          name: ${{github.event.repository.name}}-3D
          if-no-files-found: error
          path: |
            ${{env.dir}}/cad/**
            ${{env.dir}}/img/**
            !${{env.dir}}/**/*.ogv
            !${{env.dir}}/**/*.log
      - name: Create Release
        if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.branch_name.outputs.SOURCE_TAG }}
          draft: false
          prerelease: false
      - name: Upload files to Release
        if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{env.dir}}/docs/**
            ${{env.dir}}/img/**
            ${{env.dir}}/cad/**
            ${{env.dir}}/gerbers/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
